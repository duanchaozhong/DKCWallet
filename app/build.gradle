apply plugin: 'com.android.application'

//从该文件中获取签名信息
def getSignInfo(propFileName) {
    def com.android.build.gradle.internal.dsl.SigningConfig signingConfig = new com.android.build.gradle.internal.dsl.SigningConfig("signInfo")
    File propFile = file(propFileName);
    if (propFile.exists()) {
        def Properties props = new Properties()
        props.load(new FileInputStream(propFile))
        signingConfig.storeFile = file(props['STORE_FILE'])
        signingConfig.storePassword = props['STORE_PASSWORD']
        signingConfig.keyAlias = props['KEY_ALIAS']
        signingConfig.keyPassword = props['KEY_PASSWORD']
        println('signConfig is exits')
    } else {
        println('sign config is null')
        signingConfig = null
    }
    return signingConfig;
}

android {
    compileSdkVersion 25
    buildToolsVersion "26.0.0"
    defaultConfig {
        applicationId "com.dotnar.hermest"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 2
        versionName "1.1.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            buildConfigField "boolean", "IS_DEBUG", "true"
        }

        release {
            buildConfigField "boolean", "IS_DEBUG", "false"
            signingConfig getSignInfo("../local.properties")
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            if (output.outputFile != null && output.outputFile.name.endsWith('.apk')
                    &&'release'.equals(variant.buildType.name)) {
                def apkFile = new File(
                        output.outputFile.getParent(),
                        "Her_mest_v${variant.versionName}.apk")
                output.outputFile = apkFile
            }
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    //rxjava

    //    compile 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'

    //    compile 'com.zhy:okhttputils:2.6.2'

    //注解

    //动态申请权限

    //曲线

    //状态栏字体颜色设置

    //二维码扫描的

    //方法超过65535
    compile project(':recyclerlibrary')
    compile project(':lockpattern')
    compile project(':pickerview')
    compile project(':updaterLib')
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:design:25.3.1'
    compile 'com.android.support:support-v4:25.3.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'io.reactivex.rxjava2:rxjava:2.1.0'
    compile 'com.squareup.retrofit2:retrofit:2.2.0'
    compile 'com.squareup.retrofit2:converter-scalars:2.2.0'
    compile 'com.squareup.retrofit2:converter-gson:2.2.0'
    compile 'com.squareup.retrofit2:adapter-rxjava2:2.2.0'
    compile 'com.github.franmontiel:PersistentCookieJar:v1.0.0'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'com.jakewharton.rxbinding2:rxbinding:2.0.0'
    compile 'com.squareup.okhttp3:okhttp:3.7.0'
    compile 'com.google.code.gson:gson:2.2.4'
    compile 'com.jakewharton:butterknife:5.1.1'
    compile 'pub.devrel:easypermissions:0.2.0'
    compile 'com.github.PhilJay:MPAndroidChart:v3.0.2'
    compile 'com.gyf.barlibrary:barlibrary:2.2.6'
    compile 'com.readystatesoftware.systembartint:systembartint:1.0.3'
    compile 'com.google.zxing:core:3.3.0'
    compile 'com.android.support:multidex:1.0.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.4.1'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.4@aar'
    testCompile 'junit:junit:4.12'
    compile 'com.tencent.bugly:crashreport:2.6.5'
    compile project(':provideCodeLib')
}
